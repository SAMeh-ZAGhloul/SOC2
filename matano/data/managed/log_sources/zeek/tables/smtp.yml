name: smtp
schema:
  ecs_field_names:
    - destination.address
    - destination.as.number
    - destination.as.organization.name
    - destination.geo.city_name
    - destination.geo.continent_name
    - destination.geo.country_iso_code
    - destination.geo.country_name
    - destination.geo.location
    - destination.geo.name
    - destination.geo.region_iso_code
    - destination.geo.region_name
    - destination.ip
    - destination.port
    - error.message
    - event.category
    - event.id
    - event.type
    - network.community_id
    - network.protocol
    - network.transport
    - related.ip
    - source.address
    - source.as.number
    - source.as.organization.name
    - source.geo.city_name
    - source.geo.continent_name
    - source.geo.country_iso_code
    - source.geo.country_name
    - source.geo.location
    - source.geo.name
    - source.geo.region_iso_code
    - source.geo.region_name
    - source.ip
    - source.port
    - tls.established
  fields:
    - name: zeek
      type:
        fields:
          - name: smtp
            type:
              fields:
                - name: transaction_depth
                  type: int
                - name: helo
                  type: string
                - name: mail_from
                  type: string
                - name: rcpt_to
                  type:
                    element: string
                    type: list
                - name: date
                  type: timestamp
                - name: from
                  type: string
                - name: to
                  type:
                    element: string
                    type: list
                - name: cc
                  type:
                    element: string
                    type: list
                - name: reply_to
                  type: string
                - name: msg_id
                  type: string
                - name: in_reply_to
                  type: string
                - name: subject
                  type: string
                - name: x_originating_ip
                  type: string
                - name: first_received
                  type: string
                - name: second_received
                  type: string
                - name: last_reply
                  type: string
                - name: path
                  type:
                    element: string
                    type: list
                - name: user_agent
                  type: string
                - name: tls
                  type: boolean
                - name: process_received_from
                  type: boolean
                - name: has_client_activity
                  type: boolean
                - name: fuids
                  type:
                    element: string
                    type: list
                - name: is_webmail
                  type: boolean
              type: struct
        type: struct
transform: |
  .event.kind = "event"
  .event.category = ["network",]
  .event.type = ["connection", "protocol"]

  .network.transport = "tcp"
  .network.protocol = "smtp"

  if .json.ts == null { 
      abort
  }

  .zeek.smtp = object!(del(.json))

  .event.created = .ts

  .zeek.smtp, err = set(.zeek.smtp, split("id.orig_p", "."), .zeek.smtp."id.orig_p")
  del(.zeek.smtp."id.orig_p")

  .zeek.smtp, err = set(.zeek.smtp, split("id.orig_h", "."), .zeek.smtp."id.orig_h")
  del(.zeek.smtp."id.orig_h")

  .zeek.smtp, err = set(.zeek.smtp, split("id.resp_h", "."), .zeek.smtp."id.resp_h")
  del(.zeek.smtp."id.resp_h")

  .zeek.smtp, err = set(.zeek.smtp, split("id.resp_p", "."), .zeek.smtp."id.resp_p")
  del(.zeek.smtp."id.resp_p")

  .source.address = del(.zeek.smtp.id.orig_h)

  .source.port = del(.zeek.smtp.id.orig_p)

  .destination.address = del(.zeek.smtp.id.resp_h)

  .destination.port = del(.zeek.smtp.id.resp_p)

  .zeek.session_id = del(.zeek.smtp.uid)

  .event.id = .zeek.session_id

  .source.ip = .source.address

  .destination.ip = .destination.address

  .zeek.smtp.transaction_depth = del(.zeek.smtp.trans_depth)

  .zeek.smtp.mail_from = del(.zeek.smtp.mailfrom)

  .zeek.smtp.rcpt_to = del(.zeek.smtp.rcptto)

  .tls.established = to_bool(.zeek.smtp.tls) ?? null

  .ts = to_timestamp!(.zeek.smtp.ts, "seconds")

  del(.zeek.smtp.ts)

  .zeek.smtp.date = to_timestamp(.zeek.smtp.date, "seconds") ?? null

  .source.as.number = del(.source.as.asn)

  .source.as.organization.name = del(.source.as.organization_name)

  .destination.as.number = del(.destination.as.asn)

  .destination.as.organization.name = del(.destination.as.organization_name)

  .related.ip = unique(filter(flatten([.source.ip, .destination.ip])) -> |_, v| { v != null }) 

  # TODO(): add community network id
      
  del(.zeek.smtp.id)

meta:
  display_name: "smtp.log"
  description: "Simple Mail Transfer Protocol (SMTP) transactions"
