name: x509
schema:
  ecs_field_names:
    - error.message
    - event.id
    - event.type
    - file.x509.alternative_names
    - file.x509.issuer.common_name
    - file.x509.issuer.country
    - file.x509.issuer.distinguished_name
    - file.x509.issuer.locality
    - file.x509.issuer.organization
    - file.x509.issuer.organizational_unit
    - file.x509.issuer.state_or_province
    - file.x509.not_after
    - file.x509.not_before
    - file.x509.public_key_algorithm
    - file.x509.public_key_curve
    - file.x509.public_key_exponent
    - file.x509.public_key_size
    - file.x509.serial_number
    - file.x509.signature_algorithm
    - file.x509.subject.common_name
    - file.x509.subject.country
    - file.x509.subject.distinguished_name
    - file.x509.subject.locality
    - file.x509.subject.organization
    - file.x509.subject.organizational_unit
    - file.x509.subject.state_or_province
    - file.x509.version_number
  fields:
    - name: zeek
      type:
        fields:
          - name: session_id
            type: string
          - name: x509
            type:
              fields:
                - name: id
                  type: string
                - name: certificate
                  type:
                    fields:
                      - name: version
                        type: int
                      - name: serial
                        type: string
                      - name: subject
                        type:
                          fields:
                            - name: country
                              type: string
                            - name: common_name
                              type: string
                            - name: locality
                              type: string
                            - name: organization
                              type: string
                            - name: organizational_unit
                              type: string
                            - name: state
                              type: string
                          type: struct
                      - name: issuer
                        type:
                          fields:
                            - name: country
                              type: string
                            - name: common_name
                              type: string
                            - name: locality
                              type: string
                            - name: organization
                              type: string
                            - name: organizational_unit
                              type: string
                            - name: state
                              type: string
                          type: struct
                      - name: common_name
                        type: string
                      - name: valid
                        type:
                          fields:
                            - name: from
                              type: timestamp
                            - name: until
                              type: timestamp
                          type: struct
                      - name: key
                        type:
                          fields:
                            - name: algorithm
                              type: string
                            - name: type
                              type: string
                            - name: length
                              type: int
                          type: struct
                      - name: signature_algorithm
                        type: string
                      - name: exponent
                        type: string
                      - name: curve
                        type: string
                    type: struct
                - name: san
                  type:
                    fields:
                      - name: dns
                        type:
                          element: string
                          type: list
                      - name: uri
                        type:
                          element: string
                          type: list
                      - name: email
                        type:
                          element: string
                          type: list
                      - name: ip
                        type:
                          element: string
                          type: list
                      - name: other_fields
                        type: boolean
                    type: struct
                - name: basic_constraints
                  type:
                    fields:
                      - name: certificate_authority
                        type: boolean
                      - name: path_length
                        type: int
                    type: struct
                - name: log_cert
                  type: boolean
              type: struct
        type: struct
transform: |
  .event.kind = "event"
  .event.type = ["info"]

  if .json.ts == null { 
      abort
  }

  .zeek.x509 = object!(del(.json))

  .event.created = .ts

  .zeek.x509, err = set(.zeek.x509, split("certificate.subject", "."), .zeek.x509."certificate.subject")
  del(.zeek.x509."certificate.subject")

  .zeek.x509, err = set(.zeek.x509, split("certificate.issuer", "."), .zeek.x509."certificate.issuer")
  del(.zeek.x509."certificate.issuer")

  .zeek.x509, err = set(.zeek.x509, split("certificate.not_valid_before", "."), .zeek.x509."certificate.not_valid_before")
  del(.zeek.x509."certificate.not_valid_before")

  .zeek.x509, err = set(.zeek.x509, split("certificate.not_valid_after", "."), .zeek.x509."certificate.not_valid_after")
  del(.zeek.x509."certificate.not_valid_after")

  .zeek.x509, err = set(.zeek.x509, split("certificate.key_alg", "."), .zeek.x509."certificate.key_alg")
  del(.zeek.x509."certificate.key_alg")

  .zeek.x509, err = set(.zeek.x509, split("certificate.sig_alg", "."), .zeek.x509."certificate.sig_alg")
  del(.zeek.x509."certificate.sig_alg")

  .zeek.x509, err = set(.zeek.x509, split("certificate.key_type", "."), .zeek.x509."certificate.key_type")
  del(.zeek.x509."certificate.key_type")

  .zeek.x509, err = set(.zeek.x509, split("certificate.key_length", "."), .zeek.x509."certificate.key_length")
  del(.zeek.x509."certificate.key_length")

  .zeek.x509, err = set(.zeek.x509, split("certificate.cn", "."), .zeek.x509."certificate.cn")
  del(.zeek.x509."certificate.cn")

  .zeek.x509, err = set(.zeek.x509, split("zeek.x509.basic_constraints.ca", "."), .zeek.x509."zeek.x509.basic_constraints.ca")
  del(.zeek.x509."zeek.x509.basic_constraints.ca")

  .zeek.x509, err = set(.zeek.x509, split("basic_constraints.path_len", "."), .zeek.x509."basic_constraints.path_len")
  del(.zeek.x509."basic_constraints.path_len")

  .zeek.session_id = del(.zeek.x509.id)

  .event.id = .zeek.session_id

  .zeek.x509.certificate.valid.from = del(.zeek.x509.certificate.not_valid_before)

  .zeek.x509.certificate.valid.until = del(.zeek.x509.certificate.not_valid_after)

  .zeek.x509.basic_constraints.certificate_authority = del(.zeek.x509.basic_constraints.ca)

  .zeek.x509.basic_constraints.path_length = del(.zeek.x509.basic_constraints.path_len)

  .zeek.x509.basic_constraints.path_length = del(.zeek.x509.basic_constraints.path_len) || .zeek.x509.basic_constraints.path_length

  .zeek.x509.certificate.common_name = del(.zeek.x509.certificate.cn)

  .zeek.x509.certificate.iss = del(.zeek.x509.certificate.issuer)

  .zeek.x509.certificate.sub = del(.zeek.x509.certificate.subject)

  .zeek.x509.certificate.key.algorithm = del(.zeek.x509.certificate.key_alg)

  .zeek.x509.certificate.key.length = del(.zeek.x509.certificate.key_length)

  .zeek.x509.certificate.key.type = del(.zeek.x509.certificate.key_type)

  .zeek.x509.certificate.signature_algorithm = del(.zeek.x509.certificate.sig_alg)

  .zeek.x509.log_cert = del(.zeek.x509.logcert)

  .ts = to_timestamp!(.zeek.x509.ts, "seconds") 

  del(.zeek.x509.ts)

  .event.id = .zeek.session_id
      
  .file.x509.signature_algorithm = .zeek.x509.certificate.signature_algorithm

  sig_alg_map = {
    "md2WithRSAEncryption": "MD2-RSA",
    "md5WithRSAEncryption": "MD5-RSA",
    "sha-1WithRSAEncryption": "SHA1-RSA",
    "sha256WithRSAEncryption": "SHA256-RSA",
    "sha384WithRSAEncryption": "SHA384-RSA",
    "sha512WithRSAEncryption": "SHA512-RSA",
    "dsaWithSha1": "DSA-SHA1",
    "dsaWithSha256": "DSA-SHA256",
    "ecdsa-with-SHA1": "ECDSA-SHA1",
    "ecdsa-with-SHA256": "ECDSA-SHA256",
    "ecdsa-with-SHA384": "ECDSA-SHA384",
    "ecdsa-with-SHA512": "ECDSA-SHA512",
    "id-Ed25519": "Ed25519",
  }
  .file.x509.signature_algorithm = get(sig_alg_map, [.file.x509.signature_algorithm]) ?? .file.x509.signature_algorithm

  .file.x509.public_key_algorithm = .zeek.x509.certificate.key.algorithm

  .file.x509.public_key_size = to_int(.zeek.x509.certificate.key.length) ?? null                                                 

  .zeek.x509 = set!(.zeek.x509, split("certificate.exponent", "."), .zeek.x509."certificate.exponent")
  del(.zeek.x509."certificate.exponent")

  .file.x509.public_key_exponent = to_int(.zeek.x509.certificate.exponent) ?? null         

  .zeek.x509 = set!(.zeek.x509, split("certificate.serial", "."), .zeek.x509."certificate.serial")
  del(.zeek.x509."certificate.serial")

  .file.x509.serial_number = .zeek.x509.certificate.serial

  .zeek.x509 = set!(.zeek.x509, split("certificate.version", "."), .zeek.x509."certificate.version")
  del(.zeek.x509."certificate.version")

  .file.x509.version_number = to_string(.zeek.x509.certificate.version) ?? null

  .zeek.x509 = set!(.zeek.x509, split("san.dns", "."), .zeek.x509."san.dns")
  del(.zeek.x509."san.dns")

  .zeek.x509 = set!(.zeek.x509, split("san.uri", "."), .zeek.x509."san.uri")
  del(.zeek.x509."san.uri")

  .zeek.x509 = set!(.zeek.x509, split("san.email", "."), .zeek.x509."san.email")
  del(.zeek.x509."san.email")    

  .zeek.x509 = set!(.zeek.x509, split("san.ip", "."), .zeek.x509."san.ip")
  del(.zeek.x509."san.ip")               

  .zeek.x509 = set!(.zeek.x509, split("san.other_fields", "."), .zeek.x509."san.other_fields")
  del(.zeek.x509."san.other_fields")

  .file.x509.alternative_names = flatten([
    .zeek.x509.san.dns || [],
    .zeek.x509.san.uri || [],
    .zeek.x509.san.email || [],
    .zeek.x509.san.ip || [],
    .zeek.x509.san.other_fields || [],
  ])                        

  .file.x509.not_before = .zeek.x509.certificate.valid.from = to_timestamp(.zeek.x509.certificate.valid.from, "seconds") ?? null

  .file.x509.not_after = .zeek.x509.certificate.valid.until = to_timestamp(.zeek.x509.certificate.valid.until, "seconds") ?? null

  .file.x509.not_after = .zeek.x509.certificate.valid.until


  .zeek.x509.certificate.iss = replace(.zeek.x509.certificate.iss, r'\\,', "") ?? null

  .zeek.x509.certificate.issuer = parse_key_value(.zeek.x509.certificate.iss, "=", ",") ?? {}
                 
  del(.zeek.x509.certificate.iss)

  .zeek.x509.certificate.issuer.country = del(.zeek.x509.certificate.issuer.C)

  .file.x509.issuer.country = .zeek.x509.certificate.issuer.country

  .zeek.x509.certificate.issuer.common_name = del(.zeek.x509.certificate.issuer.CN)

  .file.x509.issuer.common_name = .zeek.x509.certificate.issuer.common_name

  .zeek.x509.certificate.issuer.locality = del(.zeek.x509.certificate.issuer.L)

  .file.x509.issuer.locality = .zeek.x509.certificate.issuer.locality

  .zeek.x509.certificate.issuer.organization = del(.zeek.x509.certificate.issuer.O)

  .file.x509.issuer.organization = .zeek.x509.certificate.issuer.organization

  .zeek.x509.certificate.issuer.organizational_unit = del(.zeek.x509.certificate.issuer.OU)

  .file.x509.issuer.organizational_unit = .zeek.x509.certificate.issuer.organizational_unit

  .zeek.x509.certificate.issuer.state = del(.zeek.x509.certificate.issuer.ST)

  .file.x509.issuer.state_or_province = .zeek.x509.certificate.issuer.state


  .zeek.x509.certificate.sub = replace(.zeek.x509.certificate.sub, r'\\,', "") ?? null

  .zeek.x509.certificate.subject = parse_key_value(.zeek.x509.certificate.sub, "=", ",") ?? {}
                 
  del(.zeek.x509.certificate.sub)

  .zeek.x509.certificate.subject.country = del(.zeek.x509.certificate.subject.C)

  .file.x509.subject.country = .zeek.x509.certificate.subject.country

  .zeek.x509.certificate.subject.common_name = del(.zeek.x509.certificate.subject.CN)

  .file.x509.subject.common_name = .zeek.x509.certificate.subject.common_name

  .zeek.x509.certificate.subject.locality = del(.zeek.x509.certificate.subject.L)

  .file.x509.subject.locality = .zeek.x509.certificate.subject.locality

  .zeek.x509.certificate.subject.organization = del(.zeek.x509.certificate.subject.O)

  .file.x509.subject.organization = .zeek.x509.certificate.subject.organization

  .zeek.x509.certificate.subject.organizational_unit = del(.zeek.x509.certificate.subject.OU)

  .file.x509.subject.organizational_unit = .zeek.x509.certificate.subject.organizational_unit

  .zeek.x509.certificate.subject.state = del(.zeek.x509.certificate.subject.ST)

  .file.x509.subject.state_or_province = .zeek.x509.certificate.subject.state

  .file.x509.subject = map_values(compact(.file.x509.subject)) -> |v| { [v] }
  .file.x509.issuer = map_values(compact(.file.x509.issuer)) -> |v| { [v] }

meta:
  display_name: "x509.log"
  description: "X.509 certificate info"
